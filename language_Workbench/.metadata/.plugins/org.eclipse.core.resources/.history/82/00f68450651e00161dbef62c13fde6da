package org.irisa.diverse.videogen.videoGen.aspects;

import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import fr.inria.diverse.k3.al.annotationprocessor.Step;
import org.irisa.diverse.videogen.videoGen.Transition;
import org.irisa.diverse.videogen.videoGen.VideoGen;
import org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties;

@Aspect(className = Transition.class)
@SuppressWarnings("all")
public abstract class TransitionAspect {
  @Step
  public static void execute(final Transition _self, final VideoGen videoGen) {
    final org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectContext.getSelf(_self);
     if (_self instanceof org.irisa.diverse.videogen.videoGen.Optional){
    					org.irisa.diverse.videogen.videoGen.aspects.OptionalAspect.execute((org.irisa.diverse.videogen.videoGen.Optional)_self,videoGen);
    } else  if (_self instanceof org.irisa.diverse.videogen.videoGen.Initialize){
    					org.irisa.diverse.videogen.videoGen.aspects.InitializeAspect.execute((org.irisa.diverse.videogen.videoGen.Initialize)_self,videoGen);
    } else  if (_self instanceof org.irisa.diverse.videogen.videoGen.Generate){
    					org.irisa.diverse.videogen.videoGen.aspects.GenerateAspect.execute((org.irisa.diverse.videogen.videoGen.Generate)_self,videoGen);
    } else  if (_self instanceof org.irisa.diverse.videogen.videoGen.Mandatory){
    					org.irisa.diverse.videogen.videoGen.aspects.MandatoryAspect.execute((org.irisa.diverse.videogen.videoGen.Mandatory)_self,videoGen);
    } else  if (_self instanceof org.irisa.diverse.videogen.videoGen.Alternatives){
    					org.irisa.diverse.videogen.videoGen.aspects.AlternativesAspect.execute((org.irisa.diverse.videogen.videoGen.Alternatives)_self,videoGen);
    } else  if (_self instanceof org.irisa.diverse.videogen.videoGen.Transition){
    					fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepCommand command = new fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepCommand() {
    						@Override
    						public void execute() {
    							org.irisa.diverse.videogen.videoGen.aspects.TransitionAspect._privk3_execute(_self_, (org.irisa.diverse.videogen.videoGen.Transition)_self,videoGen);
    						}
    					};
    					fr.inria.diverse.k3.al.annotationprocessor.stepmanager.IStepManager manager = fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepManagerRegistry.getInstance().findStepManager(_self);
    					if (manager != null) {
    						manager.executeStep(_self,command,"Transition","execute");
    					} else {
    						command.execute();
    					}
    					;
    } else  { throw new IllegalArgumentException("Unhandled parameter types: " + java.util.Arrays.<Object>asList(_self).toString()); };
  }
  
  public static VideoGen videoGen(final Transition _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_videoGen(_self_, _self);;
    return (org.irisa.diverse.videogen.videoGen.VideoGen)result;
  }
  
  public static void videoGen(final Transition _self, final VideoGen videoGen) {
    final org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectContext.getSelf(_self);
    _privk3_videoGen(_self_, _self,videoGen);;
  }
  
  public static Boolean executed(final Transition _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_executed(_self_, _self);;
    return (java.lang.Boolean)result;
  }
  
  public static void executed(final Transition _self, final Boolean executed) {
    final org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectContext.getSelf(_self);
    _privk3_executed(_self_, _self,executed);;
  }
  
  public static Boolean callnextTransition(final Transition _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_callnextTransition(_self_, _self);;
    return (java.lang.Boolean)result;
  }
  
  public static void callnextTransition(final Transition _self, final Boolean callnextTransition) {
    final org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.TransitionAspectTransitionAspectContext.getSelf(_self);
    _privk3_callnextTransition(_self_, _self,callnextTransition);;
  }
  
  protected static void _privk3_execute(final TransitionAspectTransitionAspectProperties _self_, final Transition _self, final VideoGen videoGen) {
  }
  
  protected static VideoGen _privk3_videoGen(final TransitionAspectTransitionAspectProperties _self_, final Transition _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getVideoGen") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (org.irisa.diverse.videogen.videoGen.VideoGen) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.videoGen;
  }
  
  protected static void _privk3_videoGen(final TransitionAspectTransitionAspectProperties _self_, final Transition _self, final VideoGen videoGen) {
    _self_.videoGen = videoGen; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setVideoGen")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, videoGen);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
  
  protected static Boolean _privk3_executed(final TransitionAspectTransitionAspectProperties _self_, final Transition _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getExecuted") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (java.lang.Boolean) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.executed;
  }
  
  protected static void _privk3_executed(final TransitionAspectTransitionAspectProperties _self_, final Transition _self, final Boolean executed) {
    _self_.executed = executed; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setExecuted")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, executed);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
  
  protected static Boolean _privk3_callnextTransition(final TransitionAspectTransitionAspectProperties _self_, final Transition _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getCallnextTransition") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (java.lang.Boolean) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.callnextTransition;
  }
  
  protected static void _privk3_callnextTransition(final TransitionAspectTransitionAspectProperties _self_, final Transition _self, final Boolean callnextTransition) {
    _self_.callnextTransition = callnextTransition; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setCallnextTransition")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, callnextTransition);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
}
