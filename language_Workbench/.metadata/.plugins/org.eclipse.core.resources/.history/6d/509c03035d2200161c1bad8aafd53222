package org.irisa.diverse.videogen.videoGen.aspects.visitors

import org.eclipse.core.resources.ResourcesPlugin
import org.irisa.diverse.videogen.transformations.VideoGenTransform
import org.irisa.diverse.videogen.transformations.helpers.VideoGenHelper
import org.irisa.diverse.videogen.videoGen.Transition
import org.irisa.diverse.videogen.videoGen.Video
import org.irisa.diverse.videogen.videoGen.VideoGen
import org.irisa.diverse.videogen.videoGen.aspects.TransitionAspect
import org.irisa.diverse.videogen.videoGen.aspects.utils.LoggableVisitor
import org.irisa.diverse.videogen.videoGen.Alternatives
import fr.inria.diverse.k3.al.annotationprocessor.Aspect

class VideoGenSetupVisitor extends LoggableVisitor {
	
	private var VideoGen videoGen
	
	def void visit(VideoGen vid) {
		videoGen = vid
	}
	
	def private void visit(Transition tra) {
	}
	
	def private void visit(Video video) {
	}
}

@Aspect(className=VideoGen)
class VideoGenSetupAspect {
	    
	def VideoGen setup() {
		_self.transitions.forEach[setup(Ã¨self)]
		VideoGenHelper.allVideos(vid).forEach[setup]
	}
}

@Aspect(className=Transition)
class TransitionSetupAspect {

	def private void setup(VideoGen vid) {
		_self.selected = false
		_self.active = true
		TransitionAspect.executed(_self, false)
		TransitionAspect.videoGen(_self, vid)
		if (_self instanceof Alternatives) {
			_self.options.forEach[opt |
				opt.selected = false
				opt.active = true
				TransitionAspect.executed(opt, false)
				TransitionAspect.videoGen(opt, vid)
			]
		}
	}
}

@Aspect(className=Video)
class VideoSetupAspect {
	
	def private void setup(VideoGen vid) {
		if (!_self.url.startsWith("/")) {
			val prefix = ResourcesPlugin.workspace.root.projects.get(0).locationURI.toString.replace("file:", "")
			val newPath = prefix + "/" + _self.url
			_self.setUrl(newPath)
		}
		// Add duration and VideoCodec MimeType
		VideoGenTransform.addMetadata(_self)
	}
}