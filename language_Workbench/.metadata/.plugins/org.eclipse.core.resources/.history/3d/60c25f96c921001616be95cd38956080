package org.irisa.diverse.videogen.videoGen.aspects.visitors;

import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import java.util.List;
import java.util.function.Consumer;
import org.chocosolver.solver.ResolutionPolicy;
import org.chocosolver.solver.Solver;
import org.chocosolver.solver.constraints.Constraint;
import org.chocosolver.solver.constraints.IntConstraintFactory;
import org.chocosolver.solver.trace.Chatterbox;
import org.chocosolver.solver.variables.IntVar;
import org.chocosolver.solver.variables.VariableFactory;
import org.eclipse.emf.common.util.EList;
import org.eclipse.xtext.xbase.lib.Conversions;
import org.eclipse.xtext.xbase.lib.Functions.Function1;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.irisa.diverse.videogen.videoGen.Sequence;
import org.irisa.diverse.videogen.videoGen.Transition;
import org.irisa.diverse.videogen.videoGen.Video;
import org.irisa.diverse.videogen.videoGen.VideoGen;
import org.irisa.diverse.videogen.videoGen.aspects.visitors.SequenceDurationConstraintsAspect;
import org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties;

@Aspect(className = VideoGen.class)
@SuppressWarnings("all")
public class VideoGenDurationConstraintsAspect {
  public static void visit(final VideoGen _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    _privk3_visit(_self_, _self);;
  }
  
  public static void addVar(final VideoGen _self, final IntVar intvar, final int duration) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    _privk3_addVar(_self_, _self,intvar,duration);;
  }
  
  public static List<IntVar> variables(final VideoGen _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_variables(_self_, _self);;
    return (java.util.List<org.chocosolver.solver.variables.IntVar>)result;
  }
  
  public static void variables(final VideoGen _self, final List<IntVar> variables) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    _privk3_variables(_self_, _self,variables);;
  }
  
  private static List<Integer> constants(final VideoGen _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_constants(_self_, _self);;
    return (java.util.List<java.lang.Integer>)result;
  }
  
  private static void constants(final VideoGen _self, final List<Integer> constants) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    _privk3_constants(_self_, _self,constants);;
  }
  
  private static IntVar objective(final VideoGen _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_objective(_self_, _self);;
    return (org.chocosolver.solver.variables.IntVar)result;
  }
  
  private static void objective(final VideoGen _self, final IntVar objective) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    _privk3_objective(_self_, _self,objective);;
  }
  
  private static int indice(final VideoGen _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_indice(_self_, _self);;
    return (int)result;
  }
  
  private static void indice(final VideoGen _self, final int indice) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    _privk3_indice(_self_, _self,indice);;
  }
  
  public static Solver solver(final VideoGen _self) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    Object result = null;
    result = _privk3_solver(_self_, _self);;
    return (org.chocosolver.solver.Solver)result;
  }
  
  public static void solver(final VideoGen _self, final Solver solver) {
    final org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenDurationConstraintsAspectVideoGenAspectContext.getSelf(_self);
    _privk3_solver(_self_, _self,solver);;
  }
  
  protected static void _privk3_visit(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self) {
    Solver _solver = new Solver("Min max durations constraints");
    VideoGenDurationConstraintsAspect.solver(_self, _solver);
    VideoGenDurationConstraintsAspect.indice(_self, 0);
    EList<Video> _videos = _self.getVideos();
    final int videoNumber = _videos.size();
    Integer _minUserConstraint = _self.getMinUserConstraint();
    Integer _maxUserConstraint = _self.getMaxUserConstraint();
    Solver _solver_1 = VideoGenDurationConstraintsAspect.solver(_self);
    IntVar _bounded = VariableFactory.bounded("objective", (_minUserConstraint).intValue(), (_maxUserConstraint).intValue(), _solver_1);
    VideoGenDurationConstraintsAspect.objective(_self, _bounded);
    IntVar[] _newArrayOfSize = new IntVar[videoNumber];
    VideoGenDurationConstraintsAspect.variables(_self, ((List<IntVar>)Conversions.doWrapArray(_newArrayOfSize)));
    int[] _newIntArrayOfSize = new int[videoNumber];
    VideoGenDurationConstraintsAspect.constants(_self, ((List<Integer>)Conversions.doWrapArray(_newIntArrayOfSize)));
    EList<Transition> _transitions = _self.getTransitions();
    final Function1<Transition, Boolean> _function = (Transition it) -> {
      return Boolean.valueOf((it instanceof Sequence));
    };
    Iterable<Transition> _filter = IterableExtensions.<Transition>filter(_transitions, _function);
    final Function1<Transition, Sequence> _function_1 = (Transition it) -> {
      return ((Sequence) it);
    };
    Iterable<Sequence> _map = IterableExtensions.<Transition, Sequence>map(_filter, _function_1);
    final Function1<Sequence, Boolean> _function_2 = (Sequence it) -> {
      return it.getActive();
    };
    Iterable<Sequence> _filter_1 = IterableExtensions.<Sequence>filter(_map, _function_2);
    final Consumer<Sequence> _function_3 = (Sequence it) -> {
      VideoGenDurationConstraintsAspect.visit(_self);
    };
    _filter_1.forEach(_function_3);
    Solver _solver_2 = VideoGenDurationConstraintsAspect.solver(_self);
    List<IntVar> _variables = VideoGenDurationConstraintsAspect.variables(_self);
    List<Integer> _constants = VideoGenDurationConstraintsAspect.constants(_self);
    IntVar _objective = VideoGenDurationConstraintsAspect.objective(_self);
    Constraint _scalar = IntConstraintFactory.scalar(((IntVar[])Conversions.unwrapArray(_variables, IntVar.class)), ((int[])Conversions.unwrapArray(_constants, int.class)), _objective);
    _solver_2.post(_scalar);
    Solver _solver_3 = VideoGenDurationConstraintsAspect.solver(_self);
    IntVar _objective_1 = VideoGenDurationConstraintsAspect.objective(_self);
    _solver_3.findOptimalSolution(ResolutionPolicy.MAXIMIZE, _objective_1);
    Solver _solver_4 = VideoGenDurationConstraintsAspect.solver(_self);
    Chatterbox.printStatistics(_solver_4);
    EList<Transition> _transitions_1 = _self.getTransitions();
    final Function1<Transition, Boolean> _function_4 = (Transition it) -> {
      return Boolean.valueOf((it instanceof Sequence));
    };
    Iterable<Transition> _filter_2 = IterableExtensions.<Transition>filter(_transitions_1, _function_4);
    final Function1<Transition, Sequence> _function_5 = (Transition it) -> {
      return ((Sequence) it);
    };
    Iterable<Sequence> _map_1 = IterableExtensions.<Transition, Sequence>map(_filter_2, _function_5);
    final Function1<Sequence, Boolean> _function_6 = (Sequence it) -> {
      return it.getActive();
    };
    Iterable<Sequence> _filter_3 = IterableExtensions.<Sequence>filter(_map_1, _function_6);
    final Consumer<Sequence> _function_7 = (Sequence it) -> {
      SequenceDurationConstraintsAspect.applyConstraints(it, _self);
    };
    _filter_3.forEach(_function_7);
    Solver _solver_5 = VideoGenDurationConstraintsAspect.solver(_self);
    final long solutions = _solver_5.findAllSolutions();
  }
  
  protected static void _privk3_addVar(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self, final IntVar intvar, final int duration) {
    List<IntVar> _variables = VideoGenDurationConstraintsAspect.variables(_self);
    int _indice = VideoGenDurationConstraintsAspect.indice(_self);
    _variables.set(_indice, intvar);
    List<Integer> _constants = VideoGenDurationConstraintsAspect.constants(_self);
    int _indice_1 = VideoGenDurationConstraintsAspect.indice(_self);
    _constants.set(_indice_1, Integer.valueOf(duration));
    int _indice_2 = VideoGenDurationConstraintsAspect.indice(_self);
    int _plus = (_indice_2 + 1);
    VideoGenDurationConstraintsAspect.indice(_self, _plus);
  }
  
  protected static List<IntVar> _privk3_variables(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getVariables") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (java.util.List) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.variables;
  }
  
  protected static void _privk3_variables(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self, final List<IntVar> variables) {
    _self_.variables = variables; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setVariables")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, variables);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
  
  protected static List<Integer> _privk3_constants(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getConstants") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (java.util.List) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.constants;
  }
  
  protected static void _privk3_constants(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self, final List<Integer> constants) {
    _self_.constants = constants; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setConstants")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, constants);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
  
  protected static IntVar _privk3_objective(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getObjective") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (org.chocosolver.solver.variables.IntVar) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.objective;
  }
  
  protected static void _privk3_objective(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self, final IntVar objective) {
    _self_.objective = objective; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setObjective")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, objective);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
  
  protected static int _privk3_indice(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getIndice") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (int) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.indice;
  }
  
  protected static void _privk3_indice(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self, final int indice) {
    _self_.indice = indice; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setIndice")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, indice);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
  
  protected static Solver _privk3_solver(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self) {
    try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("getSolver") &&
    			m.getParameterTypes().length == 0) {
    				Object ret = m.invoke(_self);
    				if (ret != null) {
    					return (org.chocosolver.solver.Solver) ret;
    				}
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
    return _self_.solver;
  }
  
  protected static void _privk3_solver(final VideoGenDurationConstraintsAspectVideoGenAspectProperties _self_, final VideoGen _self, final Solver solver) {
    _self_.solver = solver; try {
    	for (java.lang.reflect.Method m : _self.getClass().getMethods()) {
    		if (m.getName().equals("setSolver")
    				&& m.getParameterTypes().length == 1) {
    			m.invoke(_self, solver);
    		}
    	}
    } catch (Exception e) {
    	// Chut !
    }
  }
}
