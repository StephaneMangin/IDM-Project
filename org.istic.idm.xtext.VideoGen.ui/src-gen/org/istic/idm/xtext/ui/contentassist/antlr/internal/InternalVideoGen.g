/*
 * generated by Xtext
 */
grammar InternalVideoGen;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.istic.idm.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.istic.idm.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.istic.idm.xtext.services.VideoGenGrammarAccess;

}

@parser::members {
 
 	private VideoGenGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(VideoGenGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleVideoGen
entryRuleVideoGen 
:
{ before(grammarAccess.getVideoGenRule()); }
	 ruleVideoGen
{ after(grammarAccess.getVideoGenRule()); } 
	 EOF 
;

// Rule VideoGen
ruleVideoGen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVideoGenAccess().getGroup()); }
(rule__VideoGen__Group__0)
{ after(grammarAccess.getVideoGenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternatives
entryRuleAlternatives 
:
{ before(grammarAccess.getAlternativesRule()); }
	 ruleAlternatives
{ after(grammarAccess.getAlternativesRule()); } 
	 EOF 
;

// Rule Alternatives
ruleAlternatives
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlternativesAccess().getGroup()); }
(rule__Alternatives__Group__0)
{ after(grammarAccess.getAlternativesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMandatory
entryRuleMandatory 
:
{ before(grammarAccess.getMandatoryRule()); }
	 ruleMandatory
{ after(grammarAccess.getMandatoryRule()); } 
	 EOF 
;

// Rule Mandatory
ruleMandatory
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMandatoryAccess().getSequenceAssignment()); }
(rule__Mandatory__SequenceAssignment)
{ after(grammarAccess.getMandatoryAccess().getSequenceAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptional
entryRuleOptional 
:
{ before(grammarAccess.getOptionalRule()); }
	 ruleOptional
{ after(grammarAccess.getOptionalRule()); } 
	 EOF 
;

// Rule Optional
ruleOptional
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalAccess().getGroup()); }
(rule__Optional__Group__0)
{ after(grammarAccess.getOptionalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequence
entryRuleSequence 
:
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceAccess().getGroup()); }
(rule__Sequence__Group__0)
{ after(grammarAccess.getSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_0()); }
(rule__Statement__Group_0__0)
{ after(grammarAccess.getStatementAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAlternativesParserRuleCall_2()); }
	ruleAlternatives
{ after(grammarAccess.getStatementAccess().getAlternativesParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__VideoGen__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__0__Impl
	rule__VideoGen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getVideoGenKeyword_0()); }

	'VideoGen' 

{ after(grammarAccess.getVideoGenAccess().getVideoGenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGen__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__1__Impl
	rule__VideoGen__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getVideoGenAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGen__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__2__Impl
	rule__VideoGen__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
(rule__VideoGen__StatementsAssignment_2)
{ after(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
)
(
{ before(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
(rule__VideoGen__StatementsAssignment_2)*
{ after(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGen__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getVideoGenAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Statement__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getOptionalKeyword_0_0()); }

	'@Optional' 

{ after(grammarAccess.getStatementAccess().getOptionalKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getOptionalParserRuleCall_0_1()); }
	ruleOptional
{ after(grammarAccess.getStatementAccess().getOptionalParserRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getMandatoryKeyword_1_0()); }
(
	'@Mandatory' 
)?
{ after(grammarAccess.getStatementAccess().getMandatoryKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getMandatoryParserRuleCall_1_1()); }
	ruleMandatory
{ after(grammarAccess.getStatementAccess().getMandatoryParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Alternatives__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternatives__Group__0__Impl
	rule__Alternatives__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getAlternativesKeyword_0()); }

	'Alternatives' 

{ after(grammarAccess.getAlternativesAccess().getAlternativesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternatives__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternatives__Group__1__Impl
	rule__Alternatives__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getNameAssignment_1()); }
(rule__Alternatives__NameAssignment_1)
{ after(grammarAccess.getAlternativesAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternatives__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternatives__Group__2__Impl
	rule__Alternatives__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAlternativesAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternatives__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternatives__Group__3__Impl
	rule__Alternatives__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAlternativesAccess().getOptionsAssignment_3()); }
(rule__Alternatives__OptionsAssignment_3)
{ after(grammarAccess.getAlternativesAccess().getOptionsAssignment_3()); }
)
(
{ before(grammarAccess.getAlternativesAccess().getOptionsAssignment_3()); }
(rule__Alternatives__OptionsAssignment_3)*
{ after(grammarAccess.getAlternativesAccess().getOptionsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternatives__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternatives__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAlternativesAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Optional__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Optional__Group__0__Impl
	rule__Optional__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Optional__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAccess().getGroup_0()); }
(rule__Optional__Group_0__0)?
{ after(grammarAccess.getOptionalAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Optional__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Optional__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Optional__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAccess().getSequenceAssignment_1()); }
(rule__Optional__SequenceAssignment_1)
{ after(grammarAccess.getOptionalAccess().getSequenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Optional__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Optional__Group_0__0__Impl
	rule__Optional__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Optional__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAccess().getProbabilityKeyword_0_0()); }

	'@Probability(' 

{ after(grammarAccess.getOptionalAccess().getProbabilityKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Optional__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Optional__Group_0__1__Impl
	rule__Optional__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Optional__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAccess().getProbabilityAssignment_0_1()); }
(rule__Optional__ProbabilityAssignment_0_1)
{ after(grammarAccess.getOptionalAccess().getProbabilityAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Optional__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Optional__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Optional__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAccess().getRightParenthesisKeyword_0_2()); }

	')' 

{ after(grammarAccess.getOptionalAccess().getRightParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__0__Impl
	rule__Sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSequenceKeyword_0()); }

	'Sequence' 

{ after(grammarAccess.getSequenceAccess().getSequenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__1__Impl
	rule__Sequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getNameAssignment_1()); }
(rule__Sequence__NameAssignment_1)
{ after(grammarAccess.getSequenceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__2__Impl
	rule__Sequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getSequenceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__3__Impl
	rule__Sequence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getUnorderedGroup_3()); }
(rule__Sequence__UnorderedGroup_3)
{ after(grammarAccess.getSequenceAccess().getUnorderedGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getSequenceAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Sequence__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_0__0__Impl
	rule__Sequence__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getGroup_3_0_0()); }
(rule__Sequence__Group_3_0_0__0)
{ after(grammarAccess.getSequenceAccess().getGroup_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getGroup_3_0_1()); }
(rule__Sequence__Group_3_0_1__0)?
{ after(grammarAccess.getSequenceAccess().getGroup_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_3_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_0_0__0__Impl
	rule__Sequence__Group_3_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getUrlKeyword_3_0_0_0()); }
(
	'url=' 
)?
{ after(grammarAccess.getSequenceAccess().getUrlKeyword_3_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_3_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getUrlAssignment_3_0_0_1()); }
(rule__Sequence__UrlAssignment_3_0_0_1)
{ after(grammarAccess.getSequenceAccess().getUrlAssignment_3_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_3_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_0_1__0__Impl
	rule__Sequence__Group_3_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getDescriptionKeyword_3_0_1_0()); }

	'description=' 

{ after(grammarAccess.getSequenceAccess().getDescriptionKeyword_3_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_3_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getDescriptionAssignment_3_0_1_1()); }
(rule__Sequence__DescriptionAssignment_3_0_1_1)
{ after(grammarAccess.getSequenceAccess().getDescriptionAssignment_3_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_1__0__Impl
	rule__Sequence__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getLengthKeyword_3_1_0()); }

	'length=' 

{ after(grammarAccess.getSequenceAccess().getLengthKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getLengthAssignment_3_1_1()); }
(rule__Sequence__LengthAssignment_3_1_1)
{ after(grammarAccess.getSequenceAccess().getLengthAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_2__0__Impl
	rule__Sequence__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getMimetypeKeyword_3_2_0()); }

	'mimetype=' 

{ after(grammarAccess.getSequenceAccess().getMimetypeKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getMimetypeAssignment_3_2_1()); }
(rule__Sequence__MimetypeAssignment_3_2_1)
{ after(grammarAccess.getSequenceAccess().getMimetypeAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Sequence__UnorderedGroup_3
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getSequenceAccess().getUnorderedGroup_3());
    }
:
	rule__Sequence__UnorderedGroup_3__0
	
	{getUnorderedGroupHelper().canLeave(grammarAccess.getSequenceAccess().getUnorderedGroup_3())}?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getSequenceAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__Sequence__UnorderedGroup_3__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceAccess().getUnorderedGroup_3(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceAccess().getUnorderedGroup_3(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getSequenceAccess().getGroup_3_0()); }
						(rule__Sequence__Group_3_0__0)
						{ after(grammarAccess.getSequenceAccess().getGroup_3_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceAccess().getUnorderedGroup_3(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceAccess().getUnorderedGroup_3(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getSequenceAccess().getGroup_3_1()); }
						(rule__Sequence__Group_3_1__0)
						{ after(grammarAccess.getSequenceAccess().getGroup_3_1()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getSequenceAccess().getUnorderedGroup_3(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getSequenceAccess().getUnorderedGroup_3(), 2);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getSequenceAccess().getGroup_3_2()); }
						(rule__Sequence__Group_3_2__0)
						{ after(grammarAccess.getSequenceAccess().getGroup_3_2()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSequenceAccess().getUnorderedGroup_3());
	restoreStackSize(stackSize);
}


rule__Sequence__UnorderedGroup_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__UnorderedGroup_3__Impl
	rule__Sequence__UnorderedGroup_3__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__UnorderedGroup_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__UnorderedGroup_3__Impl
	rule__Sequence__UnorderedGroup_3__2?
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__UnorderedGroup_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__UnorderedGroup_3__Impl
;
finally {
	restoreStackSize(stackSize);
}








rule__VideoGen__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getVideoGenAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAlternativesAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alternatives__OptionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativesAccess().getOptionsOptionalParserRuleCall_3_0()); }
	ruleOptional{ after(grammarAccess.getAlternativesAccess().getOptionsOptionalParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mandatory__SequenceAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryAccess().getSequenceSequenceParserRuleCall_0()); }
	ruleSequence{ after(grammarAccess.getMandatoryAccess().getSequenceSequenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Optional__ProbabilityAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAccess().getProbabilityINTTerminalRuleCall_0_1_0()); }
	RULE_INT{ after(grammarAccess.getOptionalAccess().getProbabilityINTTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Optional__SequenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalAccess().getSequenceSequenceParserRuleCall_1_0()); }
	ruleSequence{ after(grammarAccess.getOptionalAccess().getSequenceSequenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSequenceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__UrlAssignment_3_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getUrlSTRINGTerminalRuleCall_3_0_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getSequenceAccess().getUrlSTRINGTerminalRuleCall_3_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__DescriptionAssignment_3_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getDescriptionSTRINGTerminalRuleCall_3_0_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getSequenceAccess().getDescriptionSTRINGTerminalRuleCall_3_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__LengthAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getLengthINTTerminalRuleCall_3_1_1_0()); }
	RULE_INT{ after(grammarAccess.getSequenceAccess().getLengthINTTerminalRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__MimetypeAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getMimetypeSTRINGTerminalRuleCall_3_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getSequenceAccess().getMimetypeSTRINGTerminalRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


