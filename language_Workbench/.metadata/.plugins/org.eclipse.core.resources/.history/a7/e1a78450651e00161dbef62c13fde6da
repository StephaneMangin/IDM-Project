package org.irisa.diverse.videogen.videoGen.aspects;

import fr.inria.diverse.k3.al.annotationprocessor.Aspect;
import fr.inria.diverse.k3.al.annotationprocessor.Step;
import org.irisa.diverse.videogen.videoGen.Initialize;
import org.irisa.diverse.videogen.videoGen.Transition;
import org.irisa.diverse.videogen.videoGen.VideoGen;
import org.irisa.diverse.videogen.videoGen.aspects.InitializeAspectInitializeAspectProperties;
import org.irisa.diverse.videogen.videoGen.aspects.TransitionAspect;
import org.irisa.diverse.videogen.videoGen.aspects.VideoGenAspect;
import org.irisa.diverse.videogen.videoGen.aspects.visitors.VideoGenUserContraintsVisitor;

@Aspect(className = Initialize.class)
@SuppressWarnings("all")
public class InitializeAspect extends TransitionAspect {
  @Step
  public static void execute(final Initialize _self, final VideoGen videoGen) {
    final org.irisa.diverse.videogen.videoGen.aspects.InitializeAspectInitializeAspectProperties _self_ = org.irisa.diverse.videogen.videoGen.aspects.InitializeAspectInitializeAspectContext.getSelf(_self);
     if (_self instanceof org.irisa.diverse.videogen.videoGen.Initialize){
    					fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepCommand command = new fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepCommand() {
    						@Override
    						public void execute() {
    							org.irisa.diverse.videogen.videoGen.aspects.InitializeAspect._privk3_execute(_self_, (org.irisa.diverse.videogen.videoGen.Initialize)_self,videoGen);
    						}
    					};
    					fr.inria.diverse.k3.al.annotationprocessor.stepmanager.IStepManager manager = fr.inria.diverse.k3.al.annotationprocessor.stepmanager.StepManagerRegistry.getInstance().findStepManager(_self);
    					if (manager != null) {
    						manager.executeStep(_self,command,"Initialize","execute");
    					} else {
    						command.execute();
    					}
    					;
    } else  if (_self instanceof org.irisa.diverse.videogen.videoGen.Transition){
    					org.irisa.diverse.videogen.videoGen.aspects.TransitionAspect.execute((org.irisa.diverse.videogen.videoGen.Transition)_self,videoGen);
    } else  { throw new IllegalArgumentException("Unhandled parameter types: " + java.util.Arrays.<Object>asList(_self).toString()); };
  }
  
  protected static void _privk3_execute(final InitializeAspectInitializeAspectProperties _self_, final Initialize _self, final VideoGen videoGen) {
    VideoGenAspect.log.info((("##### \'" + _self) + "\' is being processed."));
    VideoGenUserContraintsVisitor _videoGenUserContraintsVisitor = new VideoGenUserContraintsVisitor();
    Integer _minUserConstraint = videoGen.getMinUserConstraint();
    Integer _maxUserConstraint = videoGen.getMaxUserConstraint();
    _videoGenUserContraintsVisitor.visit(videoGen, (_minUserConstraint).intValue(), (_maxUserConstraint).intValue());
    Boolean _executed = TransitionAspect.executed(_self);
    boolean _not = (!(_executed).booleanValue());
    if (_not) {
      Transition _nextTransition = _self.getNextTransition();
      boolean _tripleNotEquals = (_nextTransition != null);
      if (_tripleNotEquals) {
        TransitionAspect.executed(_self, Boolean.valueOf(true));
        Boolean _callnextTransition = TransitionAspect.callnextTransition(_self);
        if ((_callnextTransition).booleanValue()) {
          Transition _nextTransition_1 = _self.getNextTransition();
          TransitionAspect.execute(_nextTransition_1, videoGen);
        }
      }
    }
  }
}
