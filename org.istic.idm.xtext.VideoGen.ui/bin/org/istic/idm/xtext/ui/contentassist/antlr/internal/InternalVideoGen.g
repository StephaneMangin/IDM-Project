/*
 * generated by Xtext
 */
grammar InternalVideoGen;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.istic.idm.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.istic.idm.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.istic.idm.xtext.services.VideoGenGrammarAccess;

}

@parser::members {
 
 	private VideoGenGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(VideoGenGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleVideoGen
entryRuleVideoGen 
:
{ before(grammarAccess.getVideoGenRule()); }
	 ruleVideoGen
{ after(grammarAccess.getVideoGenRule()); } 
	 EOF 
;

// Rule VideoGen
ruleVideoGen
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVideoGenAccess().getGroup()); }
(rule__VideoGen__Group__0)
{ after(grammarAccess.getVideoGenAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAlternative
entryRuleAlternative 
:
{ before(grammarAccess.getAlternativeRule()); }
	 ruleAlternative
{ after(grammarAccess.getAlternativeRule()); } 
	 EOF 
;

// Rule Alternative
ruleAlternative
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAlternativeAccess().getGroup()); }
(rule__Alternative__Group__0)
{ after(grammarAccess.getAlternativeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVideoSeq
entryRuleVideoSeq 
:
{ before(grammarAccess.getVideoSeqRule()); }
	 ruleVideoSeq
{ after(grammarAccess.getVideoSeqRule()); } 
	 EOF 
;

// Rule VideoSeq
ruleVideoSeq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVideoSeqAccess().getGroup()); }
(rule__VideoSeq__Group__0)
{ after(grammarAccess.getVideoSeqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMandatoryVideoSeq
entryRuleMandatoryVideoSeq 
:
{ before(grammarAccess.getMandatoryVideoSeqRule()); }
	 ruleMandatoryVideoSeq
{ after(grammarAccess.getMandatoryVideoSeqRule()); } 
	 EOF 
;

// Rule MandatoryVideoSeq
ruleMandatoryVideoSeq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getGroup()); }
(rule__MandatoryVideoSeq__Group__0)
{ after(grammarAccess.getMandatoryVideoSeqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionalVideoSeq
entryRuleOptionalVideoSeq 
:
{ before(grammarAccess.getOptionalVideoSeqRule()); }
	 ruleOptionalVideoSeq
{ after(grammarAccess.getOptionalVideoSeqRule()); } 
	 EOF 
;

// Rule OptionalVideoSeq
ruleOptionalVideoSeq
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getGroup()); }
(rule__OptionalVideoSeq__Group__0)
{ after(grammarAccess.getOptionalVideoSeqAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getMandatoryVideoSeqParserRuleCall_0()); }
	ruleMandatoryVideoSeq
{ after(grammarAccess.getStatementAccess().getMandatoryVideoSeqParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getOptionalVideoSeqParserRuleCall_1()); }
	ruleOptionalVideoSeq
{ after(grammarAccess.getStatementAccess().getOptionalVideoSeqParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getAlternativeParserRuleCall_2()); }
	ruleAlternative
{ after(grammarAccess.getStatementAccess().getAlternativeParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__VideoGen__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__0__Impl
	rule__VideoGen__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getVideoGenKeyword_0()); }

	'VideoGen' 

{ after(grammarAccess.getVideoGenAccess().getVideoGenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGen__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__1__Impl
	rule__VideoGen__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getVideoGenAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGen__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__2__Impl
	rule__VideoGen__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
(rule__VideoGen__StatementsAssignment_2)
{ after(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
)
(
{ before(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
(rule__VideoGen__StatementsAssignment_2)*
{ after(grammarAccess.getVideoGenAccess().getStatementsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoGen__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoGen__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoGen__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getVideoGenAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Alternative__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternative__Group__0__Impl
	rule__Alternative__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeAccess().getAlternativesKeyword_0()); }

	'alternatives' 

{ after(grammarAccess.getAlternativeAccess().getAlternativesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternative__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternative__Group__1__Impl
	rule__Alternative__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeAccess().getNameAssignment_1()); }
(rule__Alternative__NameAssignment_1)
{ after(grammarAccess.getAlternativeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternative__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternative__Group__2__Impl
	rule__Alternative__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getAlternativeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternative__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternative__Group__3__Impl
	rule__Alternative__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getAlternativeAccess().getVideoseqsAssignment_3()); }
(rule__Alternative__VideoseqsAssignment_3)
{ after(grammarAccess.getAlternativeAccess().getVideoseqsAssignment_3()); }
)
(
{ before(grammarAccess.getAlternativeAccess().getVideoseqsAssignment_3()); }
(rule__Alternative__VideoseqsAssignment_3)*
{ after(grammarAccess.getAlternativeAccess().getVideoseqsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Alternative__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Alternative__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getAlternativeAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VideoSeq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__0__Impl
	rule__VideoSeq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getVideoseqKeyword_0()); }

	'videoseq' 

{ after(grammarAccess.getVideoSeqAccess().getVideoseqKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__1__Impl
	rule__VideoSeq__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getNameAssignment_1()); }
(rule__VideoSeq__NameAssignment_1)
{ after(grammarAccess.getVideoSeqAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__2__Impl
	rule__VideoSeq__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getUrlAssignment_2()); }
(rule__VideoSeq__UrlAssignment_2)
{ after(grammarAccess.getVideoSeqAccess().getUrlAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__3__Impl
	rule__VideoSeq__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getVideoSeqAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__4__Impl
	rule__VideoSeq__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getGroup_4()); }
(rule__VideoSeq__Group_4__0)?
{ after(grammarAccess.getVideoSeqAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__5__Impl
	rule__VideoSeq__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getGroup_5()); }
(rule__VideoSeq__Group_5__0)?
{ after(grammarAccess.getVideoSeqAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__6__Impl
	rule__VideoSeq__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getGroup_6()); }
(rule__VideoSeq__Group_6__0)?
{ after(grammarAccess.getVideoSeqAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getVideoSeqAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__VideoSeq__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group_4__0__Impl
	rule__VideoSeq__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getLengthKeyword_4_0()); }

	'length=' 

{ after(grammarAccess.getVideoSeqAccess().getLengthKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getLengthAssignment_4_1()); }
(rule__VideoSeq__LengthAssignment_4_1)
{ after(grammarAccess.getVideoSeqAccess().getLengthAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VideoSeq__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group_5__0__Impl
	rule__VideoSeq__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getDescKeyword_5_0()); }

	'desc=' 

{ after(grammarAccess.getVideoSeqAccess().getDescKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getDescAssignment_5_1()); }
(rule__VideoSeq__DescAssignment_5_1)
{ after(grammarAccess.getVideoSeqAccess().getDescAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VideoSeq__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group_6__0__Impl
	rule__VideoSeq__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getProbKeyword_6_0()); }

	'prob=' 

{ after(grammarAccess.getVideoSeqAccess().getProbKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VideoSeq__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VideoSeq__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getProbAssignment_6_1()); }
(rule__VideoSeq__ProbAssignment_6_1)
{ after(grammarAccess.getVideoSeqAccess().getProbAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MandatoryVideoSeq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryVideoSeq__Group__0__Impl
	rule__MandatoryVideoSeq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryVideoSeq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getMandatoryKeyword_0()); }

	'mandatory' 

{ after(grammarAccess.getMandatoryVideoSeqAccess().getMandatoryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MandatoryVideoSeq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MandatoryVideoSeq__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryVideoSeq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getVideoseqAssignment_1()); }
(rule__MandatoryVideoSeq__VideoseqAssignment_1)
{ after(grammarAccess.getMandatoryVideoSeqAccess().getVideoseqAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OptionalVideoSeq__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalVideoSeq__Group__0__Impl
	rule__OptionalVideoSeq__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalVideoSeq__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getOptionalKeyword_0()); }

	'optional' 

{ after(grammarAccess.getOptionalVideoSeqAccess().getOptionalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OptionalVideoSeq__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OptionalVideoSeq__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalVideoSeq__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getVideoseqAssignment_1()); }
(rule__OptionalVideoSeq__VideoseqAssignment_1)
{ after(grammarAccess.getOptionalVideoSeqAccess().getVideoseqAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__VideoGen__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoGenAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getVideoGenAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAlternativeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Alternative__VideoseqsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAlternativeAccess().getVideoseqsVideoSeqParserRuleCall_3_0()); }
	ruleVideoSeq{ after(grammarAccess.getAlternativeAccess().getVideoseqsVideoSeqParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getVideoSeqAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__UrlAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getVideoSeqAccess().getUrlSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__LengthAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getLengthINTTerminalRuleCall_4_1_0()); }
	RULE_INT{ after(grammarAccess.getVideoSeqAccess().getLengthINTTerminalRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__DescAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getDescSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getVideoSeqAccess().getDescSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VideoSeq__ProbAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVideoSeqAccess().getProbINTTerminalRuleCall_6_1_0()); }
	RULE_INT{ after(grammarAccess.getVideoSeqAccess().getProbINTTerminalRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MandatoryVideoSeq__VideoseqAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMandatoryVideoSeqAccess().getVideoseqVideoSeqParserRuleCall_1_0()); }
	ruleVideoSeq{ after(grammarAccess.getMandatoryVideoSeqAccess().getVideoseqVideoSeqParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionalVideoSeq__VideoseqAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionalVideoSeqAccess().getVideoseqVideoSeqParserRuleCall_1_0()); }
	ruleVideoSeq{ after(grammarAccess.getOptionalVideoSeqAccess().getVideoseqVideoSeqParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


