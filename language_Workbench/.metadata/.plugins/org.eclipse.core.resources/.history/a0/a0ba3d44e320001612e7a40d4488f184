package org.irisa.diverse.videogen.videogenl.transformations.helpers;

import java.nio.file.Path;
import org.irisa.diverse.videogen.transformations.VideoCodec;
import org.irisa.diverse.videogen.transformations.strategies.VideosStrategy;

/**
 * @author Stéphane Mangin <stephane.mangin@freesbee.fr>
 */
@SuppressWarnings("all")
public class VideosHelper {
  private static VideosStrategy staticStrategy /* Skipped initializer because of errors */;
  
  public static VideosStrategy setStrategy(final VideosStrategy strategy) {
    return VideosHelper.staticStrategy = strategy;
  }
  
  /**
   * Create a thumbnail from the given video to the given path
   * 
   * TODO: should return a file object to be processed by the caller
   * @author Stéphane Mangin <stephane.mangin@freesbee.fr>
   */
  public static void createThumbnails(final Path fullPath, final Path thumbFileName) {
    VideosHelper.staticStrategy.createThumbnails(fullPath, thumbFileName);
  }
  
  /**
   * Convert this video conform to the given mimeType
   * 
   * TODO: add a mimeType instead of a string format parameter
   * @author Stéphane Mangin <stephane.mangin@freesbee.fr>
   */
  public static void convert(final Path fullPath, final Path newFullPathName, final VideoCodec codec) {
    VideosHelper.staticStrategy.convert(fullPath, newFullPathName, codec);
  }
  
  /**
   * Return the mimeType object for the given video
   * 
   * @author Stéphane Mangin <stephane.mangin@freesbee.fr>
   */
  public static VideoCodec getMimeType(final Path fullPath) {
    return VideosHelper.staticStrategy.getMimeType(fullPath);
  }
  
  /**
   * Return the duration (in seconds) for the given video
   * 
   * @author Stéphane Mangin <stephane.mangin@freesbee.fr>
   */
  public static int getDuration(final Path fullPath) {
    return VideosHelper.staticStrategy.getDuration(fullPath);
  }
}
